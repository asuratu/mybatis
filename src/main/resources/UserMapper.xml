<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 通过 namespace 指定映射文件对应的接口 -->

<mapper namespace="com.feng.mapper.UserMapper">
    <!-- select 用于查询单条数据 -->
    <!-- id: 是接口中的方法名 -->
    <!-- resultType: 是返回值类型 -->
    <!-- 要写完整的类路径 -->
    <select id="findUserById" resultType="com.feng.model.User">
        <!-- #{id} 相当于预处理的占位符 ? -->
        <!-- 其实就是接口的参数列表的值  -->
        <!-- 查询返回的结果集, 会自动封装到 User 对象中 -->
        <!-- 但是 ORM 自动封装的前提的是: 返回的列名和 User 类的属性名一致 -->
        <!-- 如果不一致, 需要使用别名 -->
        select * from user where id = #{id}
    </select>

    <!-- 虽然返回的是集合, 但是此处的 resultType 依然是集合中存储的数据类型, User -->
    <select id="findAllUser" resultType="com.feng.model.User">
        <!-- 绑定多个参数 -->
        <!-- 1. #{} 内按顺序填写 param1, param2, param3... -->
        <!--        select * from user where balance &lt; #{param1} and nickname like #{param2}-->
        <!-- 2. 在 findAllUser 的形参 使用 @Param 注解, 指定参数名 -->
        select * from user where balance &lt; #{balance} and nickname like #{nickname}
    </select>

    <!-- findUserByLoginMap -->
    <select id="findUserByLoginMap" resultType="com.feng.model.User">
        <!-- 参数是 map, #{} 内写 map 的 key -->
        select * from user where passport = #{passport} and password = #{password}
    </select>

    <!-- insertUser -->
    <insert id="insertUser" parameterType="com.feng.model.User" useGeneratedKeys="true" keyProperty="id">
        <!-- 1. #{} 内写 User 对象的属性名 -->
        <!-- 2. 如果是自增主键, 需要在 insert 标签中添加 useGeneratedKeys="true" keyProperty="id" -->
        insert into user (passport, password, nickname, balance, create_at, update_at) values (#{passport}, #{password},
        #{nickname}, #{balance}, now(), now())
    </insert>

    <!-- updateUser -->
    <update id="updateUser" parameterType="com.feng.model.User">
        update user set passport = #{passport}, password = #{password}, nickname = #{nickname}, balance = #{balance},
        update_at = now() where id = #{id}
    </update>
</mapper>
